api = 'VMRM_Configuration_Query'
kwargs = {'target': 'maint', 'configuration_file_name': 'vmrm', 'configuration_file_type': 'config', 'configuration_dir_name': 'vmsys:vmrmsvm.'}
result = \
{
 "_configuration_dir_name": "vmsys:vmrmsvm.",
 "_configuration_file": [
  "/**********************************************************************/",
  "/*                                                                    */",
  "/*   Licensed Materials - Property of IBM                             */",
  "/*   This product contains \"Restricted Materials of IBM\"              */",
  "/*   5739-A03 (C) Copyright IBM Corp. - 2003                          */",
  "/*   All rights reserved.                                             */",
  "/*   US Government Users Restricted Rights -                          */",
  "/*   Use, duplication or disclosure restricted by GSA ADP Schedule    */",
  "/*   Contract with IBM Corp.                                          */",
  "/*   See IBM Copyright Instructions.                                  */",
  "/*                                                                    */",
  "*----------------------------------------------------------------------*",
  "*  This is a sample VMRM Service                                       *",
  "*  Virtual Machine configuration file.                                 *",
  "*                                                                      *",
  "*  -  ADMIN is an optional statement that must contain                 *",
  "*     either one or both of the keywords: MSGUSER and NEWCFG, to       *",
  "*     specify a userid where error messages can be sent and a new      *",
  "*     configuration file to use.                                       *",
  "*   - WORKLOAD is a required statement, specifying the workload        *",
  "*     name followed by either a USER, ACCOUNT, or ACIGROUP keyword     *",
  "*     and the appropriate value.  Multiple users, account IDs,         *",
  "*     or Acigroup names may be specified on one line for each type,    *",
  "*     or continued on the next line using a comma as a continuation    *",
  "*     character at the end of the continuing line.                     *",
  "*  -  GOAL is a required statement, specifying the goal name,          *",
  "*     the goal type keyword, CPU or DASD keyword, followed by the      *",
  "*     target percentage value.                                         *",
  "*  -  MANAGE is a required statement that associates a WORKLOAD        *",
  "*     with a GOAL.  An importance value between 1-10 must be           *",
  "*     specified for managing this workload.  A workload may be         *",
  "*     managed to only one goal at a given time.                        *",
  "*                                                                      *",
  "*----------------------------------------------------------------------*",
  " ",
  "*   This is a valid comment line  *",
  "/*  So is this                    */",
  ";   and this",
  " ",
  "/* ADMIN STATEMENT */",
  "/* This will cause messages to be sent to VMRMADMN's console */",
  "ADMIN MSGUSER maint",
  " ",
  "/* GOAL STATEMENTS */",
  "GOAL MAX VELOCITY CPU 100 DASD 100",
  "GOAL MIDDASD VELOCITY DASD 50",
  "GOAL MINCPU VELOCITY CPU 1",
  " ",
  "/* WORKLOAD statements followed by corresponding MANAGE statement */",
  "* workload 1",
  "WORKLOAD WORK1 USER linux* manfred fredrick usera,",
  "    userb chris kurt doug jon",
  "MANAGE WORK1 GOAL MAX IMPORTANCE 5",
  " ",
  "* workload 2",
  "WORKLOAD WORK2 USER payroll",
  "MANAGE WORK2 GOAL MAX IMPORTANCE 10",
  " ",
  "* workload 3",
  "WORKLOAD WORK3 USER webcount",
  "MANAGE WORK3 GOAL MIDDASD IMPORTANCE 7",
  " ",
  "* workload 4",
  "WORKLOAD WORK4 USER m1",
  "MANAGE WORK4 GOAL MINCPU IMPORTANCE 1"
 ],
 "_configuration_file_name": "vmrm",
 "_configuration_file_type": "config",
 "_function_name": "VMRM_Configuration_Query",
 "_reason_code": 0,
 "_recv": {
  "py/b64": "AAAAAAAADK8AAAAAAAAAAAAAAAAAAAyfLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq\nKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovAC8qICAgICAgICAgICAgICAg\nICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqLwAv\nKiAgIExpY2Vuc2VkIE1hdGVyaWFscyAtIFByb3BlcnR5IG9mIElCTSAgICAgICAgICAgICAgICAg\nICAgICAgICAgICAgKi8ALyogICBUaGlzIHByb2R1Y3QgY29udGFpbnMgIlJlc3RyaWN0ZWQgTWF0\nZXJpYWxzIG9mIElCTSIgICAgICAgICAgICAgICovAC8qICAgNTczOS1BMDMgKEMpIENvcHlyaWdo\ndCBJQk0gQ29ycC4gLSAyMDAzICAgICAgICAgICAgICAgICAgICAgICAgICAqLwAvKiAgIEFsbCBy\naWdodHMgcmVzZXJ2ZWQuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\nICAgKi8ALyogICBVUyBHb3Zlcm5tZW50IFVzZXJzIFJlc3RyaWN0ZWQgUmlnaHRzIC0gICAgICAg\nICAgICAgICAgICAgICAgICAgICovAC8qICAgVXNlLCBkdXBsaWNhdGlvbiBvciBkaXNjbG9zdXJl\nIHJlc3RyaWN0ZWQgYnkgR1NBIEFEUCBTY2hlZHVsZSAgICAqLwAvKiAgIENvbnRyYWN0IHdpdGgg\nSUJNIENvcnAuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKi8ALyog\nICBTZWUgSUJNIENvcHlyaWdodCBJbnN0cnVjdGlvbnMuICAgICAgICAgICAgICAgICAgICAgICAg\nICAgICAgICAgICovAC8qICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\nICAgICAgICAgICAgICAgICAgICAgICAgICAqLwAqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t\nLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSoAKiAgVGhpcyBpcyBh\nIHNhbXBsZSBWTVJNIFNlcnZpY2UgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\nICAqACogIFZpcnR1YWwgTWFjaGluZSBjb25maWd1cmF0aW9uIGZpbGUuICAgICAgICAgICAgICAg\nICAgICAgICAgICAgICAgICAgKgAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\nICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICoAKiAgLSAgQURNSU4gaXMgYW4gb3B0\naW9uYWwgc3RhdGVtZW50IHRoYXQgbXVzdCBjb250YWluICAgICAgICAgICAgICAgICAqACogICAg\nIGVpdGhlciBvbmUgb3IgYm90aCBvZiB0aGUga2V5d29yZHM6IE1TR1VTRVIgYW5kIE5FV0NGRywg\ndG8gICAgICAgKgAqICAgICBzcGVjaWZ5IGEgdXNlcmlkIHdoZXJlIGVycm9yIG1lc3NhZ2VzIGNh\nbiBiZSBzZW50IGFuZCBhIG5ldyAgICAgICoAKiAgICAgY29uZmlndXJhdGlvbiBmaWxlIHRvIHVz\nZS4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqACogICAtIFdPUktMT0FE\nIGlzIGEgcmVxdWlyZWQgc3RhdGVtZW50LCBzcGVjaWZ5aW5nIHRoZSB3b3JrbG9hZCAgICAgICAg\nKgAqICAgICBuYW1lIGZvbGxvd2VkIGJ5IGVpdGhlciBhIFVTRVIsIEFDQ09VTlQsIG9yIEFDSUdS\nT1VQIGtleXdvcmQgICAgICoAKiAgICAgYW5kIHRoZSBhcHByb3ByaWF0ZSB2YWx1ZS4gIE11bHRp\ncGxlIHVzZXJzLCBhY2NvdW50IElEcywgICAgICAgICAqACogICAgIG9yIEFjaWdyb3VwIG5hbWVz\nIG1heSBiZSBzcGVjaWZpZWQgb24gb25lIGxpbmUgZm9yIGVhY2ggdHlwZSwgICAgKgAqICAgICBv\nciBjb250aW51ZWQgb24gdGhlIG5leHQgbGluZSB1c2luZyBhIGNvbW1hIGFzIGEgY29udGludWF0\naW9uICAgICoAKiAgICAgY2hhcmFjdGVyIGF0IHRoZSBlbmQgb2YgdGhlIGNvbnRpbnVpbmcgbGlu\nZS4gICAgICAgICAgICAgICAgICAgICAqACogIC0gIEdPQUwgaXMgYSByZXF1aXJlZCBzdGF0ZW1l\nbnQsIHNwZWNpZnlpbmcgdGhlIGdvYWwgbmFtZSwgICAgICAgICAgKgAqICAgICB0aGUgZ29hbCB0\neXBlIGtleXdvcmQsIENQVSBvciBEQVNEIGtleXdvcmQsIGZvbGxvd2VkIGJ5IHRoZSAgICAgICoA\nKiAgICAgdGFyZ2V0IHBlcmNlbnRhZ2UgdmFsdWUuICAgICAgICAgICAgICAgICAgICAgICAgICAg\nICAgICAgICAgICAgICAqACogIC0gIE1BTkFHRSBpcyBhIHJlcXVpcmVkIHN0YXRlbWVudCB0aGF0\nIGFzc29jaWF0ZXMgYSBXT1JLTE9BRCAgICAgICAgKgAqICAgICB3aXRoIGEgR09BTC4gIEFuIGlt\ncG9ydGFuY2UgdmFsdWUgYmV0d2VlbiAxLTEwIG11c3QgYmUgICAgICAgICAgICoAKiAgICAgc3Bl\nY2lmaWVkIGZvciBtYW5hZ2luZyB0aGlzIHdvcmtsb2FkLiAgQSB3b3JrbG9hZCBtYXkgYmUgICAg\nICAgICAqACogICAgIG1hbmFnZWQgdG8gb25seSBvbmUgZ29hbCBhdCBhIGdpdmVuIHRpbWUuICAg\nICAgICAgICAgICAgICAgICAgICAgKgAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\nICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICoAKi0tLS0tLS0tLS0tLS0tLS0t\nLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qACAA\nKiAgIFRoaXMgaXMgYSB2YWxpZCBjb21tZW50IGxpbmUgICoALyogIFNvIGlzIHRoaXMgICAgICAg\nICAgICAgICAgICAgICovADsgICBhbmQgdGhpcwAgAC8qIEFETUlOIFNUQVRFTUVOVCAqLwAvKiBU\naGlzIHdpbGwgY2F1c2UgbWVzc2FnZXMgdG8gYmUgc2VudCB0byBWTVJNQURNTidzIGNvbnNvbGUg\nKi8AQURNSU4gTVNHVVNFUiBtYWludAAgAC8qIEdPQUwgU1RBVEVNRU5UUyAqLwBHT0FMIE1BWCBW\nRUxPQ0lUWSBDUFUgMTAwIERBU0QgMTAwAEdPQUwgTUlEREFTRCBWRUxPQ0lUWSBEQVNEIDUwAEdP\nQUwgTUlOQ1BVIFZFTE9DSVRZIENQVSAxACAALyogV09SS0xPQUQgc3RhdGVtZW50cyBmb2xsb3dl\nZCBieSBjb3JyZXNwb25kaW5nIE1BTkFHRSBzdGF0ZW1lbnQgKi8AKiB3b3JrbG9hZCAxAFdPUktM\nT0FEIFdPUksxIFVTRVIgbGludXgqIG1hbmZyZWQgZnJlZHJpY2sgdXNlcmEsACAgICB1c2VyYiBj\naHJpcyBrdXJ0IGRvdWcgam9uAE1BTkFHRSBXT1JLMSBHT0FMIE1BWCBJTVBPUlRBTkNFIDUAIAAq\nIHdvcmtsb2FkIDIAV09SS0xPQUQgV09SSzIgVVNFUiBwYXlyb2xsAE1BTkFHRSBXT1JLMiBHT0FM\nIE1BWCBJTVBPUlRBTkNFIDEwACAAKiB3b3JrbG9hZCAzAFdPUktMT0FEIFdPUkszIFVTRVIgd2Vi\nY291bnQATUFOQUdFIFdPUkszIEdPQUwgTUlEREFTRCBJTVBPUlRBTkNFIDcAIAAqIHdvcmtsb2Fk\nIDQAV09SS0xPQUQgV09SSzQgVVNFUiBtMQBNQU5BR0UgV09SSzQgR09BTCBNSU5DUFUgSU1QT1JU\nQU5DRSAx\n"
 },
 "_request_id": 0,
 "_return_code": 0,
 "_send": {
  "py/b64": "AAAAWwAAABhWTVJNX0NvbmZpZ3VyYXRpb25fUXVlcnkAAAAFbWFpbnQAAAAFbWFpbnQAAAAFbWFp\nbnQAAAAEdm1ybQAAAAZjb25maWcAAAAOdm1zeXM6dm1ybXN2bS4=\n"
 },
 "_target": "maint"
}
